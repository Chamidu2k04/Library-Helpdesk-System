<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/demo/servlets/user/RegisterServlet.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/demo/servlets/user/RegisterServlet.java" />
              <option name="originalContent" value="package com.example.demo.servlets.user;&#10;&#10;import com.example.demo.utils.DBConnection;&#10;import jakarta.servlet.*;&#10;import jakarta.servlet.annotation.WebServlet;&#10;import jakarta.servlet.http.*;&#10;&#10;import java.io.IOException;&#10;import java.sql.*;&#10;&#10;@WebServlet(&quot;/RegisterServlet&quot;)&#10;public class RegisterServlet extends HttpServlet {&#10;&#10;    @Override&#10;    protected void doPost(HttpServletRequest request, HttpServletResponse response)&#10;            throws ServletException, IOException {&#10;&#10;        String firstName = request.getParameter(&quot;firstName&quot;);&#10;        String lastName = request.getParameter(&quot;lastName&quot;);&#10;        String email = request.getParameter(&quot;email&quot;);&#10;        String ageStr = request.getParameter(&quot;age&quot;);&#10;        String telephone = request.getParameter(&quot;telephone&quot;);&#10;        String hometown = request.getParameter(&quot;hometown&quot;);&#10;        String password = request.getParameter(&quot;password&quot;);&#10;        String confirmPassword = request.getParameter(&quot;confirmPassword&quot;);&#10;&#10;        // ✅ Validate password match&#10;        if (!password.equals(confirmPassword)) {&#10;            response.sendRedirect(&quot;register.jsp?error=Passwords+do+not+match&quot;);&#10;            return;&#10;        }&#10;&#10;        int age;&#10;        try {&#10;            age = Integer.parseInt(ageStr);&#10;        } catch (NumberFormatException e) {&#10;            response.sendRedirect(&quot;register.jsp?error=Invalid+age&quot;);&#10;            return;&#10;        }&#10;&#10;        Connection con = null;&#10;        try {&#10;            con = DBConnection.getConnection();&#10;            if (con == null) {&#10;                response.sendRedirect(&quot;register.jsp?error=Database+connection+failed&quot;);&#10;                return;&#10;            }&#10;&#10;            // 1️⃣ Create table if not exists&#10;            String createTableSQL = &quot;&quot;&quot;&#10;                CREATE TABLE IF NOT EXISTS Users (&#10;                    id INT AUTO_INCREMENT PRIMARY KEY,&#10;                    firstname VARCHAR(50) NOT NULL,&#10;                    lastname VARCHAR(50) NOT NULL,&#10;                    email VARCHAR(100) NOT NULL UNIQUE,&#10;                    age INT NOT NULL,&#10;                    telephone VARCHAR(20) NOT NULL,&#10;                    hometown VARCHAR(100) NOT NULL,&#10;                    password VARCHAR(255) NOT NULL&#10;                )&#10;                &quot;&quot;&quot;;&#10;            try (Statement stmt = con.createStatement()) {&#10;                stmt.execute(createTableSQL);&#10;            }&#10;&#10;            // 2️⃣ Insert user&#10;            String insertSQL = &quot;INSERT INTO Users (firstname, lastname, email, age, telephone, hometown, password) VALUES (?, ?, ?, ?, ?, ?, ?)&quot;;&#10;            try (PreparedStatement ps = con.prepareStatement(insertSQL)) {&#10;                ps.setString(1, firstName);&#10;                ps.setString(2, lastName);&#10;                ps.setString(3, email);&#10;                ps.setInt(4, age);&#10;                ps.setString(5, telephone);&#10;                ps.setString(6, hometown);&#10;                ps.setString(7, password); // ⚠️ In production, hash password&#10;&#10;                ps.executeUpdate();&#10;            }&#10;&#10;            // ✅ Redirect on success&#10;            response.sendRedirect(&quot;login.jsp?success=Registered+successfully&quot;);&#10;&#10;        } catch (SQLException e) {&#10;            e.printStackTrace();&#10;            String errorMsg = e.getMessage();&#10;            if (errorMsg != null &amp;&amp; errorMsg.toLowerCase().contains(&quot;duplicate&quot;)) {&#10;                response.sendRedirect(&quot;register.jsp?error=Email+already+exists&quot;);&#10;            } else {&#10;                response.sendRedirect(&quot;register.jsp?error=Database+error&quot;);&#10;            }&#10;        } finally {&#10;            if (con != null) {&#10;                try { con.close(); } catch (SQLException ignore) {}&#10;            }&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.demo.servlets.user;&#10;&#10;import com.example.demo.utils.DBConnection;&#10;import jakarta.servlet.*;&#10;import jakarta.servlet.annotation.WebServlet;&#10;import jakarta.servlet.http.*;&#10;&#10;import java.io.IOException;&#10;import java.sql.*;&#10;&#10;@WebServlet(&quot;/RegisterServlet&quot;)&#10;public class RegisterServlet extends HttpServlet {&#10;&#10;    @Override&#10;    protected void doPost(HttpServletRequest request, HttpServletResponse response)&#10;            throws ServletException, IOException {&#10;&#10;        String firstName = request.getParameter(&quot;firstName&quot;);&#10;        String lastName = request.getParameter(&quot;lastName&quot;);&#10;        String email = request.getParameter(&quot;email&quot;);&#10;        String ageStr = request.getParameter(&quot;age&quot;);&#10;        String telephone = request.getParameter(&quot;telephone&quot;);&#10;        String hometown = request.getParameter(&quot;hometown&quot;);&#10;        String password = request.getParameter(&quot;password&quot;);&#10;        String confirmPassword = request.getParameter(&quot;confirmPassword&quot;);&#10;&#10;        // ✅ Validate password match&#10;        if (!password.equals(confirmPassword)) {&#10;            response.sendRedirect(&quot;register.jsp?error=Passwords+do+not+match&quot;);&#10;            return;&#10;        }&#10;&#10;        int age;&#10;        try {&#10;            age = Integer.parseInt(ageStr);&#10;        } catch (NumberFormatException e) {&#10;            response.sendRedirect(&quot;register.jsp?error=Invalid+age&quot;);&#10;            return;&#10;        }&#10;&#10;        Connection con = null;&#10;        try {&#10;            con = DBConnection.getConnection();&#10;            if (con == null) {&#10;                response.sendRedirect(&quot;register.jsp?error=Database+connection+failed&quot;);&#10;                return;&#10;            }&#10;&#10;            // 1️⃣ Create table if not exists&#10;            String createTableSQL = &quot;&quot;&quot;&#10;                CREATE TABLE IF NOT EXISTS Users (&#10;                    id INT AUTO_INCREMENT PRIMARY KEY,&#10;                    firstname VARCHAR(50) NOT NULL,&#10;                    lastname VARCHAR(50) NOT NULL,&#10;                    email VARCHAR(100) NOT NULL UNIQUE,&#10;                    age INT NOT NULL,&#10;                    telephone VARCHAR(20) NOT NULL,&#10;                    hometown VARCHAR(100) NOT NULL,&#10;                    password VARCHAR(255) NOT NULL&#10;                )&#10;                &quot;&quot;&quot;;&#10;            try (Statement stmt = con.createStatement()) {&#10;                stmt.execute(createTableSQL);&#10;            }&#10;&#10;            // 2️⃣ Insert user&#10;            String insertSQL = &quot;INSERT INTO Users (firstname, lastname, email, age, telephone, hometown, password) VALUES (?, ?, ?, ?, ?, ?, ?)&quot;;&#10;            try (PreparedStatement ps = con.prepareStatement(insertSQL)) {&#10;                ps.setString(1, firstName);&#10;                ps.setString(2, lastName);&#10;                ps.setString(3, email);&#10;                ps.setInt(4, age);&#10;                ps.setString(5, telephone);&#10;                ps.setString(6, hometown);&#10;                ps.setString(7, password); // ⚠️ In production, hash password&#10;&#10;                ps.executeUpdate();&#10;            }&#10;&#10;            // ✅ Redirect on success&#10;            response.sendRedirect(&quot;login.jsp?success=Registered+successfully&quot;);&#10;&#10;        } catch (SQLException e) {&#10;            e.printStackTrace();&#10;            String errorMsg = e.getMessage();&#10;            if (errorMsg != null &amp;&amp; errorMsg.toLowerCase().contains(&quot;duplicate&quot;)) {&#10;                response.sendRedirect(&quot;register.jsp?error=Email+already+exists&quot;);&#10;            } else {&#10;                response.sendRedirect(&quot;register.jsp?error=Database+error&quot;);&#10;            }&#10;        } finally {&#10;            if (con != null) {&#10;                try { con.close(); } catch (SQLException ignore) {}&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>